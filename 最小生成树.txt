/************************************

最小生成树Kruskal算法,循环加入n-1条边（把边的关系存入结构体）

************************************/

#include<stdio.h>
#include<algorithm>
#include<iostream>
using namespace std;
int f[1100];
struct node {
	int s, d, w;
};
struct node q[1100];
bool cmp(struct node a, struct node b) {
	return a.w < b.w;
}
void init() {//初始化
	int i;
	for (i = 1;i <= 1000;i++)
		f[i] = i;
}
int getf(int v) {
	if (f[v] == v)return v;
	else {
		f[v] = getf(f[v]);//压缩路径
	}
}
int merge(int x, int y) {//并查集检查两个顶点关系
	int t1, t2;
	t1 = getf(x);
	t2 = getf(y);
	if (t1 == t2)return 0;
	else {//如果不在同一生成树内
		f[t2] = t1;
		return 1;
	}
}
int main()
{
	int i, j, k, x, y, m, n, sum = 0, num = 0;
	scanf("%d%d", &n, &m);
	for (i = 1;i <= m;i++) {
		scanf("%d%d%d", &q[i].s, &q[i].d, &q[i].w);
	}
	init();
	sort(q + 1, q + 1 + m, cmp);//m条边排序
	for (i = 1;i <= m;i++) {
		if (merge(q[i].s, q[i].d) == 1) {
			num++;
			sum += q[i].w;
		}
		if (num == n - 1)break;//最小生成树一定只有n-1条边
	}
	printf("%d\n", sum);
	return 0;
}
//最小生成树 Prim算法
//Prim
#include<stdio.h>
int e[51][51], book[51],dis[110],u,min=0x3f3f3f3f;
int main()
{
	int i, j, k, n, m,a,b,c,sum=0;
	scanf("%d%d", &n, &m);
	for (i = 1;i <= n;i++) {
		for (j = 1;j <= n;j++) {
			if (i == j)e[i][j] = 0;
			else e[i][j] = 0x3f3f3f3f;
		}
	}
	for (i = 1;i <= m;i++) {
		scanf("%d%d%d", &a, &b, &c);
		e[a][b] = c;
		e[b][a] = c;
	}
	for (i = 1;i <= n;i++) {
		dis[i] = e[1][i];
	}
	book[1] = 1;
	for (i = 2;i <= n;i++) {
		for (j = 1;j <= n;j++) {
			if (book[j] == 0 && dis[j] > min) {
				u = j;
				min = dis[j];
			}
		}
		book[u] = 1;
		sum += dis[u];
		for (j = 1;j <= n;j++) {
			if (book[j] == 0 && dis[j] >= e[u][j])
				dis[j] = e[u][j];
		}
	}
	printf("%d\n", sum);
}